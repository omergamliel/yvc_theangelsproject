// Generated by view binder compiler. Do not edit!
package co.median.android.a2025_theangels_new.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import co.median.android.a2025_theangels_new.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button detailsBtn;

  @NonNull
  public final TextView eventAddress;

  @NonNull
  public final TextView eventCase;

  @NonNull
  public final TextView eventDate;

  @NonNull
  public final ImageView eventPicture;

  @NonNull
  public final TextView eventStatus;

  @NonNull
  public final TextView eventVol;

  private EventBinding(@NonNull ConstraintLayout rootView, @NonNull Button detailsBtn,
      @NonNull TextView eventAddress, @NonNull TextView eventCase, @NonNull TextView eventDate,
      @NonNull ImageView eventPicture, @NonNull TextView eventStatus, @NonNull TextView eventVol) {
    this.rootView = rootView;
    this.detailsBtn = detailsBtn;
    this.eventAddress = eventAddress;
    this.eventCase = eventCase;
    this.eventDate = eventDate;
    this.eventPicture = eventPicture;
    this.eventStatus = eventStatus;
    this.eventVol = eventVol;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.details_btn;
      Button detailsBtn = ViewBindings.findChildViewById(rootView, id);
      if (detailsBtn == null) {
        break missingId;
      }

      id = R.id.event_address;
      TextView eventAddress = ViewBindings.findChildViewById(rootView, id);
      if (eventAddress == null) {
        break missingId;
      }

      id = R.id.event_case;
      TextView eventCase = ViewBindings.findChildViewById(rootView, id);
      if (eventCase == null) {
        break missingId;
      }

      id = R.id.event_date;
      TextView eventDate = ViewBindings.findChildViewById(rootView, id);
      if (eventDate == null) {
        break missingId;
      }

      id = R.id.event_picture;
      ImageView eventPicture = ViewBindings.findChildViewById(rootView, id);
      if (eventPicture == null) {
        break missingId;
      }

      id = R.id.event_status;
      TextView eventStatus = ViewBindings.findChildViewById(rootView, id);
      if (eventStatus == null) {
        break missingId;
      }

      id = R.id.event_vol;
      TextView eventVol = ViewBindings.findChildViewById(rootView, id);
      if (eventVol == null) {
        break missingId;
      }

      return new EventBinding((ConstraintLayout) rootView, detailsBtn, eventAddress, eventCase,
          eventDate, eventPicture, eventStatus, eventVol);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
