// Generated by view binder compiler. Do not edit!
package co.median.android.a2025_theangels_new.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import co.median.android.a2025_theangels_new.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistration2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText confirmPassword;

  @NonNull
  public final TextInputEditText email;

  @NonNull
  public final MaterialCheckBox gunLicenseCheckbox;

  @NonNull
  public final Chip medicalAllergy;

  @NonNull
  public final Chip medicalAsthma;

  @NonNull
  public final TextView medicalDetailsLabel;

  @NonNull
  public final Chip medicalDiabetes;

  @NonNull
  public final Chip medicalEpilepsy;

  @NonNull
  public final Chip medicalHeart;

  @NonNull
  public final ChipGroup medicalOptions;

  @NonNull
  public final Chip medicalPressure;

  @NonNull
  public final TextInputEditText password;

  @NonNull
  public final TextInputEditText phone;

  @NonNull
  public final ImageView registerBackground;

  @NonNull
  public final MaterialButton registerButton;

  @NonNull
  public final LinearLayout registerContent;

  private ActivityRegistration2Binding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText confirmPassword, @NonNull TextInputEditText email,
      @NonNull MaterialCheckBox gunLicenseCheckbox, @NonNull Chip medicalAllergy,
      @NonNull Chip medicalAsthma, @NonNull TextView medicalDetailsLabel,
      @NonNull Chip medicalDiabetes, @NonNull Chip medicalEpilepsy, @NonNull Chip medicalHeart,
      @NonNull ChipGroup medicalOptions, @NonNull Chip medicalPressure,
      @NonNull TextInputEditText password, @NonNull TextInputEditText phone,
      @NonNull ImageView registerBackground, @NonNull MaterialButton registerButton,
      @NonNull LinearLayout registerContent) {
    this.rootView = rootView;
    this.confirmPassword = confirmPassword;
    this.email = email;
    this.gunLicenseCheckbox = gunLicenseCheckbox;
    this.medicalAllergy = medicalAllergy;
    this.medicalAsthma = medicalAsthma;
    this.medicalDetailsLabel = medicalDetailsLabel;
    this.medicalDiabetes = medicalDiabetes;
    this.medicalEpilepsy = medicalEpilepsy;
    this.medicalHeart = medicalHeart;
    this.medicalOptions = medicalOptions;
    this.medicalPressure = medicalPressure;
    this.password = password;
    this.phone = phone;
    this.registerBackground = registerBackground;
    this.registerButton = registerButton;
    this.registerContent = registerContent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistration2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistration2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registration2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistration2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirmPassword;
      TextInputEditText confirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.email;
      TextInputEditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.gunLicenseCheckbox;
      MaterialCheckBox gunLicenseCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (gunLicenseCheckbox == null) {
        break missingId;
      }

      id = R.id.medical_allergy;
      Chip medicalAllergy = ViewBindings.findChildViewById(rootView, id);
      if (medicalAllergy == null) {
        break missingId;
      }

      id = R.id.medical_asthma;
      Chip medicalAsthma = ViewBindings.findChildViewById(rootView, id);
      if (medicalAsthma == null) {
        break missingId;
      }

      id = R.id.medicalDetailsLabel;
      TextView medicalDetailsLabel = ViewBindings.findChildViewById(rootView, id);
      if (medicalDetailsLabel == null) {
        break missingId;
      }

      id = R.id.medical_diabetes;
      Chip medicalDiabetes = ViewBindings.findChildViewById(rootView, id);
      if (medicalDiabetes == null) {
        break missingId;
      }

      id = R.id.medical_epilepsy;
      Chip medicalEpilepsy = ViewBindings.findChildViewById(rootView, id);
      if (medicalEpilepsy == null) {
        break missingId;
      }

      id = R.id.medical_heart;
      Chip medicalHeart = ViewBindings.findChildViewById(rootView, id);
      if (medicalHeart == null) {
        break missingId;
      }

      id = R.id.medicalOptions;
      ChipGroup medicalOptions = ViewBindings.findChildViewById(rootView, id);
      if (medicalOptions == null) {
        break missingId;
      }

      id = R.id.medical_pressure;
      Chip medicalPressure = ViewBindings.findChildViewById(rootView, id);
      if (medicalPressure == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputEditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.phone;
      TextInputEditText phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.registerBackground;
      ImageView registerBackground = ViewBindings.findChildViewById(rootView, id);
      if (registerBackground == null) {
        break missingId;
      }

      id = R.id.registerButton;
      MaterialButton registerButton = ViewBindings.findChildViewById(rootView, id);
      if (registerButton == null) {
        break missingId;
      }

      id = R.id.registerContent;
      LinearLayout registerContent = ViewBindings.findChildViewById(rootView, id);
      if (registerContent == null) {
        break missingId;
      }

      return new ActivityRegistration2Binding((ConstraintLayout) rootView, confirmPassword, email,
          gunLicenseCheckbox, medicalAllergy, medicalAsthma, medicalDetailsLabel, medicalDiabetes,
          medicalEpilepsy, medicalHeart, medicalOptions, medicalPressure, password, phone,
          registerBackground, registerButton, registerContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
