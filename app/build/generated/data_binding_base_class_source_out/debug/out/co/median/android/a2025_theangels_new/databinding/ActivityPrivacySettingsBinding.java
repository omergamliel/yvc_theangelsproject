// Generated by view binder compiler. Do not edit!
package co.median.android.a2025_theangels_new.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import co.median.android.a2025_theangels_new.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPrivacySettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final PermissionSectionBinding callPermissionSection;

  @NonNull
  public final LinearLayout headerContainer;

  @NonNull
  public final PermissionSectionBinding healthPermissionSection;

  @NonNull
  public final PermissionSectionBinding locationPermissionSection;

  @NonNull
  public final PermissionSectionBinding notificationPermissionSection;

  @NonNull
  public final RelativeLayout rootLayout;

  @NonNull
  public final TextView title;

  private ActivityPrivacySettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView btnBack, @NonNull PermissionSectionBinding callPermissionSection,
      @NonNull LinearLayout headerContainer,
      @NonNull PermissionSectionBinding healthPermissionSection,
      @NonNull PermissionSectionBinding locationPermissionSection,
      @NonNull PermissionSectionBinding notificationPermissionSection,
      @NonNull RelativeLayout rootLayout, @NonNull TextView title) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.callPermissionSection = callPermissionSection;
    this.headerContainer = headerContainer;
    this.healthPermissionSection = healthPermissionSection;
    this.locationPermissionSection = locationPermissionSection;
    this.notificationPermissionSection = notificationPermissionSection;
    this.rootLayout = rootLayout;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPrivacySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPrivacySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_privacy_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPrivacySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.call_permission_section;
      View callPermissionSection = ViewBindings.findChildViewById(rootView, id);
      if (callPermissionSection == null) {
        break missingId;
      }
      PermissionSectionBinding binding_callPermissionSection = PermissionSectionBinding.bind(callPermissionSection);

      id = R.id.header_container;
      LinearLayout headerContainer = ViewBindings.findChildViewById(rootView, id);
      if (headerContainer == null) {
        break missingId;
      }

      id = R.id.health_permission_section;
      View healthPermissionSection = ViewBindings.findChildViewById(rootView, id);
      if (healthPermissionSection == null) {
        break missingId;
      }
      PermissionSectionBinding binding_healthPermissionSection = PermissionSectionBinding.bind(healthPermissionSection);

      id = R.id.location_permission_section;
      View locationPermissionSection = ViewBindings.findChildViewById(rootView, id);
      if (locationPermissionSection == null) {
        break missingId;
      }
      PermissionSectionBinding binding_locationPermissionSection = PermissionSectionBinding.bind(locationPermissionSection);

      id = R.id.notification_permission_section;
      View notificationPermissionSection = ViewBindings.findChildViewById(rootView, id);
      if (notificationPermissionSection == null) {
        break missingId;
      }
      PermissionSectionBinding binding_notificationPermissionSection = PermissionSectionBinding.bind(notificationPermissionSection);

      RelativeLayout rootLayout = (RelativeLayout) rootView;

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityPrivacySettingsBinding((RelativeLayout) rootView, btnBack,
          binding_callPermissionSection, headerContainer, binding_healthPermissionSection,
          binding_locationPermissionSection, binding_notificationPermissionSection, rootLayout,
          title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
