// Generated by view binder compiler. Do not edit!
package co.median.android.a2025_theangels_new.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import co.median.android.a2025_theangels_new.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PermissionSectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnManagePermission;

  @NonNull
  public final TextView permissionDescription;

  @NonNull
  public final ImageView permissionIcon;

  @NonNull
  public final TextView permissionStatus;

  private PermissionSectionBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnManagePermission, @NonNull TextView permissionDescription,
      @NonNull ImageView permissionIcon, @NonNull TextView permissionStatus) {
    this.rootView = rootView;
    this.btnManagePermission = btnManagePermission;
    this.permissionDescription = permissionDescription;
    this.permissionIcon = permissionIcon;
    this.permissionStatus = permissionStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PermissionSectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PermissionSectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.permission_section, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PermissionSectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_manage_permission;
      Button btnManagePermission = ViewBindings.findChildViewById(rootView, id);
      if (btnManagePermission == null) {
        break missingId;
      }

      id = R.id.permission_description;
      TextView permissionDescription = ViewBindings.findChildViewById(rootView, id);
      if (permissionDescription == null) {
        break missingId;
      }

      id = R.id.permission_icon;
      ImageView permissionIcon = ViewBindings.findChildViewById(rootView, id);
      if (permissionIcon == null) {
        break missingId;
      }

      id = R.id.permission_status;
      TextView permissionStatus = ViewBindings.findChildViewById(rootView, id);
      if (permissionStatus == null) {
        break missingId;
      }

      return new PermissionSectionBinding((LinearLayout) rootView, btnManagePermission,
          permissionDescription, permissionIcon, permissionStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
